import { Issue } from '../shared/issue.model';

export const REACT_TEST_ISSUES : Issue[] = [
  {
    url: "https://api.github.com/repos/facebook/react/issues/13889",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13889/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13889/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13889/events",
    html_url: "https://github.com/facebook/react/pull/13889",
    id: 371792117,
    node_id: "MDExOlB1bGxSZXF1ZXN0MjI0MTU5ODYx",
    number: 13889,
    title: "SSR support for class contextType",
    user: {
      login: "sebmarkbage",
      id: 63648,
      node_id: "MDQ6VXNlcjYzNjQ4",
      avatar_url: "https://avatars2.githubusercontent.com/u/63648?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/sebmarkbage",
      html_url: "https://github.com/sebmarkbage",
      followers_url: "https://api.github.com/users/sebmarkbage/followers",
      following_url: "https://api.github.com/users/sebmarkbage/following{/other_user}",
      gists_url: "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      starred_url: "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/sebmarkbage/subscriptions",
      organizations_url: "https://api.github.com/users/sebmarkbage/orgs",
      repos_url: "https://api.github.com/users/sebmarkbage/repos",
      events_url: "https://api.github.com/users/sebmarkbage/events{/privacy}",
      received_events_url: "https://api.github.com/users/sebmarkbage/received_events",
      type: "User",
      site_admin: false
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false
      }
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 1,
    created_at: "2018-10-19T03:21:57Z",
    updated_at: "2018-10-19T03:46:17Z",
    closed_at: null,
    author_association: "MEMBER",
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/13889",
      html_url: "https://github.com/facebook/react/pull/13889",
      diff_url: "https://github.com/facebook/react/pull/13889.diff",
      patch_url: "https://github.com/facebook/react/pull/13889.patch"
    },
    body: "Based on work by @alexmckenley \r\n\r\n"
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/13877",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13877/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13877/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13877/events",
    html_url: "https://github.com/facebook/react/pull/13877",
    id: 371249634,
    node_id: "MDExOlB1bGxSZXF1ZXN0MjIzNzM5NzQ4",
    number: 13877,
    title: "FIX: Context pollutes mutable global state (with \"thread local storage\")",
    user: {
      login: "leebyron",
      id: 50130,
      node_id: "MDQ6VXNlcjUwMTMw",
      avatar_url: "https://avatars3.githubusercontent.com/u/50130?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/leebyron",
      html_url: "https://github.com/leebyron",
      followers_url: "https://api.github.com/users/leebyron/followers",
      following_url: "https://api.github.com/users/leebyron/following{/other_user}",
      gists_url: "https://api.github.com/users/leebyron/gists{/gist_id}",
      starred_url: "https://api.github.com/users/leebyron/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/leebyron/subscriptions",
      organizations_url: "https://api.github.com/users/leebyron/orgs",
      repos_url: "https://api.github.com/users/leebyron/repos",
      events_url: "https://api.github.com/users/leebyron/events{/privacy}",
      received_events_url: "https://api.github.com/users/leebyron/received_events",
      type: "User",
      site_admin: false
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false
      }
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 1,
    created_at: "2018-10-17T20:16:49Z",
    updated_at: "2018-10-18T02:14:46Z",
    closed_at: null,
    author_association: "CONTRIBUTOR",
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/13877",
      html_url: "https://github.com/facebook/react/pull/13877",
      diff_url: "https://github.com/facebook/react/pull/13877.diff",
      patch_url: "https://github.com/facebook/react/pull/13877.patch"
    },
    body: "Fixes #13874\r\n\r\nAlternative to #13875\r\n\r\nThis straw-man approach also avoids mutating global context by giving each ReactPartialRenderer its own mutable state and using context instances as keys into that mutable state."
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/13876",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13876/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13876/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13876/events",
    html_url: "https://github.com/facebook/react/issues/13876",
    id: 371236587,
    node_id: "MDU6SXNzdWUzNzEyMzY1ODc=",
    number: 13876,
    title: "Uncontrolled input type=\"checkbox\" reflects updating `defaultChecked` in Edge and Safari",
    user: {
      login: "berlysia",
      id: 950573,
      node_id: "MDQ6VXNlcjk1MDU3Mw==",
      avatar_url: "https://avatars1.githubusercontent.com/u/950573?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/berlysia",
      html_url: "https://github.com/berlysia",
      followers_url: "https://api.github.com/users/berlysia/followers",
      following_url: "https://api.github.com/users/berlysia/following{/other_user}",
      gists_url: "https://api.github.com/users/berlysia/gists{/gist_id}",
      starred_url: "https://api.github.com/users/berlysia/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/berlysia/subscriptions",
      organizations_url: "https://api.github.com/users/berlysia/orgs",
      repos_url: "https://api.github.com/users/berlysia/repos",
      events_url: "https://api.github.com/users/berlysia/events{/privacy}",
      received_events_url: "https://api.github.com/users/berlysia/received_events",
      type: "User",
      site_admin: false
    },
    labels: [],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 0,
    created_at: "2018-10-17T19:40:11Z",
    updated_at: "2018-10-17T19:40:11Z",
    closed_at: null,
    author_association: "NONE",
    body: "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nbug\r\n\r\n**What is the current behavior?**\r\n\r\nUpdating the value of `defaultChecked` causes a change DOM property's `checked` value.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nhttps://codesandbox.io/s/yjop5zwmr9\r\n\r\n**What is the expected behavior?**\r\n\r\nUpdating the value of `defaultChecked` should not affect to DOM property's `checked` value.\r\n(no log in codesandbox is expected)\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nreproduce in React v15.2.0 and v16.5.2, ReactDOM v15.2.0 and v16.5.2.\r\nnot reproduce in v15.1\r\n\r\nbrowser: Safari 12 on macOS Sierra, Edge 42 on Windows 10\r\nnot reproduce in Chrome(70, beta), Chrome(72, canary), Firefox(62), IE11 on Win10\r\nsmartphone browsers are not checked."
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/13874",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13874/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13874/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13874/events",
    html_url: "https://github.com/facebook/react/pull/13874",
    id: 371212099,
    node_id: "MDExOlB1bGxSZXF1ZXN0MjIzNzEwMjMw",
    number: 13874,
    title: "BUG: ReactPartialRenderer / New Context polutes mutable global state",
    user: {
      login: "leebyron",
      id: 50130,
      node_id: "MDQ6VXNlcjUwMTMw",
      avatar_url: "https://avatars3.githubusercontent.com/u/50130?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/leebyron",
      html_url: "https://github.com/leebyron",
      followers_url: "https://api.github.com/users/leebyron/followers",
      following_url: "https://api.github.com/users/leebyron/following{/other_user}",
      gists_url: "https://api.github.com/users/leebyron/gists{/gist_id}",
      starred_url: "https://api.github.com/users/leebyron/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/leebyron/subscriptions",
      organizations_url: "https://api.github.com/users/leebyron/orgs",
      repos_url: "https://api.github.com/users/leebyron/repos",
      events_url: "https://api.github.com/users/leebyron/events{/privacy}",
      received_events_url: "https://api.github.com/users/leebyron/received_events",
      type: "User",
      site_admin: false
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false
      }
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 6,
    created_at: "2018-10-17T18:33:02Z",
    updated_at: "2018-10-17T20:20:02Z",
    closed_at: null,
    author_association: "CONTRIBUTOR",
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/13874",
      html_url: "https://github.com/facebook/react/pull/13874",
      diff_url: "https://github.com/facebook/react/pull/13874.diff",
      patch_url: "https://github.com/facebook/react/pull/13874.patch"
    },
    body: "The new context API stores the provided values on the shared context instance. When used in a synchronous context, this is not an issue. However when used in an concurrent context this can cause a \"push provider\" from one react render to have an effect on an unrelated concurrent react render.\r\n\r\nI've encountered this bug in production when using renderToNodeStream, which asks ReactPartialRenderer for bytes up to a high water mark before yielding. If two Node Streams are created and read from in parallel, the state of one can polute the other.\r\n\r\nI wrote a failing test to illustrate the conditions under which this happens.\r\n\r\nI'm also concerned that the experimental concurrent/async React rendering on the client could suffer from the same issue.\r\n"
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/13873",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13873/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13873/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13873/events",
    html_url: "https://github.com/facebook/react/pull/13873",
    id: 371163469,
    node_id: "MDExOlB1bGxSZXF1ZXN0MjIzNjcxNzAz",
    number: 13873,
    title: "Imperative vs Declarative Programming link",
    user: {
      login: "supergoat",
      id: 16918667,
      node_id: "MDQ6VXNlcjE2OTE4NjY3",
      avatar_url: "https://avatars3.githubusercontent.com/u/16918667?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/supergoat",
      html_url: "https://github.com/supergoat",
      followers_url: "https://api.github.com/users/supergoat/followers",
      following_url: "https://api.github.com/users/supergoat/following{/other_user}",
      gists_url: "https://api.github.com/users/supergoat/gists{/gist_id}",
      starred_url: "https://api.github.com/users/supergoat/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/supergoat/subscriptions",
      organizations_url: "https://api.github.com/users/supergoat/orgs",
      repos_url: "https://api.github.com/users/supergoat/repos",
      events_url: "https://api.github.com/users/supergoat/events{/privacy}",
      received_events_url: "https://api.github.com/users/supergoat/received_events",
      type: "User",
      site_admin: false
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false
      }
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 1,
    created_at: "2018-10-17T16:28:30Z",
    updated_at: "2018-10-17T16:36:32Z",
    closed_at: null,
    author_association: "NONE",
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/13873",
      html_url: "https://github.com/facebook/react/pull/13873",
      diff_url: "https://github.com/facebook/react/pull/13873.diff",
      patch_url: "https://github.com/facebook/react/pull/13873.patch"
    },
    body: "Hey,\r\n\r\nI have been using react for sometime now and I never really understood what is meant by 'React is declarative'. \r\nI found an article today by Tyler McGinnis explaining the difference between imperative and declarative programming, and I found it very useful. In the article he also gives an example using React to explain the different approaches.\r\n\r\nI thought this might be useful for others and therefore I created this pull request to add it to the README.md. However, I am not sure this is the right place to link to articles. An alternative place would be on the reactjs.org website.\r\n\r\nPlease let me know if you feel this is a good idea, and if it would add value for others.\r\n\r\n**Before submitting a pull request,** please make sure the following is done:\r\n\r\n1. Fork [the repository](https://github.com/facebook/react) and create your branch from `master`.\r\n2. Run `yarn` in the repository root.\r\n3. If you've fixed a bug or added code that should be tested, add tests!\r\n4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n5. Run `yarn test-prod` to test in the production environment. It supports the same options as `yarn test`.\r\n6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n9. Run the [Flow](https://flowtype.org/) typechecks (`yarn flow`).\r\n10. If you haven't already, complete the CLA.\r\n\r\n**Learn more about contributing:** https://reactjs.org/docs/how-to-contribute.html\r\n"
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/13870",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13870/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13870/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13870/events",
    html_url: "https://github.com/facebook/react/issues/13870",
    id: 370918041,
    node_id: "MDU6SXNzdWUzNzA5MTgwNDE=",
    number: 13870,
    title: "[npm:create-react-class] Support Context",
    user: {
      login: "pjebs",
      id: 5377970,
      node_id: "MDQ6VXNlcjUzNzc5NzA=",
      avatar_url: "https://avatars1.githubusercontent.com/u/5377970?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/pjebs",
      html_url: "https://github.com/pjebs",
      followers_url: "https://api.github.com/users/pjebs/followers",
      following_url: "https://api.github.com/users/pjebs/following{/other_user}",
      gists_url: "https://api.github.com/users/pjebs/gists{/gist_id}",
      starred_url: "https://api.github.com/users/pjebs/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/pjebs/subscriptions",
      organizations_url: "https://api.github.com/users/pjebs/orgs",
      repos_url: "https://api.github.com/users/pjebs/repos",
      events_url: "https://api.github.com/users/pjebs/events{/privacy}",
      received_events_url: "https://api.github.com/users/pjebs/received_events",
      type: "User",
      site_admin: false
    },
    labels: [],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 0,
    created_at: "2018-10-17T06:32:33Z",
    updated_at: "2018-10-17T06:32:33Z",
    closed_at: null,
    author_association: "NONE",
    body: "https://reactjs.org/docs/react-without-es6.html the article doesn't mention if it's possible to use Contexts without ES6.\r\n\r\nIs ES5 able to support contexts using `create-react-class`"
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/13867",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13867/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13867/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13867/events",
    html_url: "https://github.com/facebook/react/issues/13867",
    id: 370884667,
    node_id: "MDU6SXNzdWUzNzA4ODQ2Njc=",
    number: 13867,
    title: "Need a react component function to check nextprops just before re-render to stop a redirecting action in react component. ",
    user: {
      login: "deepa-a",
      id: 5584624,
      node_id: "MDQ6VXNlcjU1ODQ2MjQ=",
      avatar_url: "https://avatars2.githubusercontent.com/u/5584624?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/deepa-a",
      html_url: "https://github.com/deepa-a",
      followers_url: "https://api.github.com/users/deepa-a/followers",
      following_url: "https://api.github.com/users/deepa-a/following{/other_user}",
      gists_url: "https://api.github.com/users/deepa-a/gists{/gist_id}",
      starred_url: "https://api.github.com/users/deepa-a/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/deepa-a/subscriptions",
      organizations_url: "https://api.github.com/users/deepa-a/orgs",
      repos_url: "https://api.github.com/users/deepa-a/repos",
      events_url: "https://api.github.com/users/deepa-a/events{/privacy}",
      received_events_url: "https://api.github.com/users/deepa-a/received_events",
      type: "User",
      site_admin: false
    },
    labels: [],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 0,
    created_at: "2018-10-17T03:34:28Z",
    updated_at: "2018-10-17T03:34:28Z",
    closed_at: null,
    author_association: "NONE",
    body: "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nNeed help with an edge case. Not sure what is the good practice.\r\n\r\n**What is the current behavior?**\r\nUsing react + redux + redux saga for my application.\r\n\r\nI have a 'Home' screen with a search bar, where I search for a subscriber. The action is dispatched and the saga does the API call and the requirement is to redirect to the 'Subscriber' screen with the result. I read the good practice is not to redirect from the sagas/reducers and redirect from the component using `<Redirect>` of react-router-dom. \r\nSo In my 'Home' component, I check for the props and if I have the result, I redirect to the 'Subscriber' results page.\r\nThe issue is Redux stores the state and every time I navigate to 'Home' it gets redirected because the store persist the results.\r\n\r\n\r\n`class Home extends React.Component {`\r\n  `render() {`\r\n    `const { actions, subscriberDetails } = this.props;`\r\n   ` if(subscriberDetails){`\r\n        `return(`\r\n            `<Redirect to='/subscriber-details'/>`\r\n        `)`\r\n    `}`\r\n    `return` (\r\n      `<div>`\r\n        `<h1>Search subscriber</h1>`\r\n        `<input type=\"text\" name=\"Subscriber\" />`\r\n        `<button onClick={actions.getSubscriber}>Get Subscriber</button>`\r\n      `</div>`\r\n    `);`\r\n  `}`\r\n`}`\r\n\r\n`Home.propTypes = {`\r\n  `actions: PropTypes.object.isRequired,`\r\n  `subscriberDetails: PropTypes.object,`\r\n`};`\r\n\r\n`const mapStateToProps = (state, ownprops) => {`\r\n    `return{`\r\n        `subscriberDetails: state.subscriber.details`\r\n    `}`\r\n`};`\r\n\r\n`const mapDispatchToProps = dispatch => ({`\r\n  `actions: bindActionCreators(subscriberActions, dispatch),`\r\n`});`\r\n\r\n`export default connect(mapStateToProps, mapDispatchToProps)(Home);`\r\n\r\n\r\n**What is the expected behavior?**\r\n\r\nThe redirect should happen only when I search for the a 'Subscriber' and not every time I navigate to the Home screen (results are persisted).\r\n\r\nTo solve this I need a function which is called just before the component re renders on update to check the 'props' in my 'Home' component, where I can see if the props has the result and redirects to the required screen. The 'componentWillRecieveProps' function has made unsafe. \r\nI use shouldComponentUpdate function to solve this issue, where I check for nextprops and set a variable to redirect only when the component update. Which works fine. \r\n\r\n`shouldComponentUpdate(nextprops, nextstate){`\r\n        `this.redir = nextprops.subscriberDetails? <Redirect to='/subscriber-details'/> : null;`\r\n        `return true;`\r\n`}`\r\n\r\nI just need to confirm is there any other way to solve this issue or can I use `shouldComponentUpdate` function for this?\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nWindows\r\n`\"react\": \"^16.5.2\"`\r\n `\"react-dom\": \"^16.5.2\"`\r\n`\"react-router-dom\": \"^4.3.1\"`\r\n`\"redux\": \"^4.0.0\"`\r\n`\"redux-saga\": \"^0.16.2\"`"
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/13866",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13866/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13866/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13866/events",
    html_url: "https://github.com/facebook/react/pull/13866",
    id: 370862175,
    node_id: "MDExOlB1bGxSZXF1ZXN0MjIzNDQzMDkx",
    number: 13866,
    title: "Add warning message when Suspense fallback is undefined",
    user: {
      login: "imbhargav5",
      id: 2936644,
      node_id: "MDQ6VXNlcjI5MzY2NDQ=",
      avatar_url: "https://avatars2.githubusercontent.com/u/2936644?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/imbhargav5",
      html_url: "https://github.com/imbhargav5",
      followers_url: "https://api.github.com/users/imbhargav5/followers",
      following_url: "https://api.github.com/users/imbhargav5/following{/other_user}",
      gists_url: "https://api.github.com/users/imbhargav5/gists{/gist_id}",
      starred_url: "https://api.github.com/users/imbhargav5/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/imbhargav5/subscriptions",
      organizations_url: "https://api.github.com/users/imbhargav5/orgs",
      repos_url: "https://api.github.com/users/imbhargav5/repos",
      events_url: "https://api.github.com/users/imbhargav5/events{/privacy}",
      received_events_url: "https://api.github.com/users/imbhargav5/received_events",
      type: "User",
      site_admin: false
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false
      }
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 1,
    created_at: "2018-10-17T01:31:42Z",
    updated_at: "2018-10-17T02:00:14Z",
    closed_at: null,
    author_association: "NONE",
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/13866",
      html_url: "https://github.com/facebook/react/pull/13866",
      diff_url: "https://github.com/facebook/react/pull/13866.diff",
      patch_url: "https://github.com/facebook/react/pull/13866.patch"
    },
    body: "Aims to fix #13864 \r\n- [x] Add warning message within reconciler\r\n- [x] Add test case to show a warning when `fallback` prop is missing.\r\n- [ ]  Fix the many test cases which do not have `fallback` as a prop in jest `development` environment. How should I go about this? \r\n\r\nShould I add a `fallback={null}` prop for existing test cases which don't have a fallback prop defined or should I add an `expect().toWarnDev` to all of them?"
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/13865",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13865/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13865/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13865/events",
    html_url: "https://github.com/facebook/react/pull/13865",
    id: 370853570,
    node_id: "MDExOlB1bGxSZXF1ZXN0MjIzNDM3MTk1",
    number: 13865,
    title: "[react-cache] Remove `cache` as argument to `read`",
    user: {
      login: "acdlite",
      id: 3624098,
      node_id: "MDQ6VXNlcjM2MjQwOTg=",
      avatar_url: "https://avatars0.githubusercontent.com/u/3624098?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/acdlite",
      html_url: "https://github.com/acdlite",
      followers_url: "https://api.github.com/users/acdlite/followers",
      following_url: "https://api.github.com/users/acdlite/following{/other_user}",
      gists_url: "https://api.github.com/users/acdlite/gists{/gist_id}",
      starred_url: "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/acdlite/subscriptions",
      organizations_url: "https://api.github.com/users/acdlite/orgs",
      repos_url: "https://api.github.com/users/acdlite/repos",
      events_url: "https://api.github.com/users/acdlite/events{/privacy}",
      received_events_url: "https://api.github.com/users/acdlite/received_events",
      type: "User",
      site_admin: false
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false
      }
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 1,
    created_at: "2018-10-17T00:42:57Z",
    updated_at: "2018-10-19T03:17:03Z",
    closed_at: null,
    author_association: "MEMBER",
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/13865",
      html_url: "https://github.com/facebook/react/pull/13865",
      diff_url: "https://github.com/facebook/react/pull/13865.diff",
      patch_url: "https://github.com/facebook/react/pull/13865.patch"
    },
    body: "Updated is API is `Resource.read(key)` instead of `Resource.read(cache, key)`.\r\n\r\nThe cache is read from context using `readContext`.\r\n\r\nThis also removes cache invalidation entirely (other than the default LRU mechanism), as well as the ability to have multiple caches. We'll add it back once `Context.write` (some version of #13293) lands and we can implement it the right way.\r\n\r\nSince there's now only a single cache (the global one), we don't actually need to use context yet, but I've added a dummy context anyway so the user gets an error if they attempt to read outside the render phase."
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/13863",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13863/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13863/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13863/events",
    html_url: "https://github.com/facebook/react/issues/13863",
    id: 370747277,
    node_id: "MDU6SXNzdWUzNzA3NDcyNzc=",
    number: 13863,
    title: "script onLoad is not triggered",
    user: {
      login: "caub",
      id: 3134574,
      node_id: "MDQ6VXNlcjMxMzQ1NzQ=",
      avatar_url: "https://avatars0.githubusercontent.com/u/3134574?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/caub",
      html_url: "https://github.com/caub",
      followers_url: "https://api.github.com/users/caub/followers",
      following_url: "https://api.github.com/users/caub/following{/other_user}",
      gists_url: "https://api.github.com/users/caub/gists{/gist_id}",
      starred_url: "https://api.github.com/users/caub/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/caub/subscriptions",
      organizations_url: "https://api.github.com/users/caub/orgs",
      repos_url: "https://api.github.com/users/caub/repos",
      events_url: "https://api.github.com/users/caub/events{/privacy}",
      received_events_url: "https://api.github.com/users/caub/received_events",
      type: "User",
      site_admin: false
    },
    labels: [],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 0,
    created_at: "2018-10-16T18:43:39Z",
    updated_at: "2018-10-16T18:45:59Z",
    closed_at: null,
    author_association: "NONE",
    body: "The `onLoad` event handler isn't triggered for a script element\r\n```jsx\r\n<script src=\"https://...\" async defer onLoad={() => console.log(1)} />\r\n```\r\n(I tried with `onload` as well)\r\n\r\nlive demo: https://jsfiddle.net/crl/uks4pc60/\r\n\r\nreact version: 16.5.2"
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/13862",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13862/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13862/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13862/events",
    html_url: "https://github.com/facebook/react/pull/13862",
    id: 370742878,
    node_id: "MDExOlB1bGxSZXF1ZXN0MjIzMzUyNzc1",
    number: 13862,
    title: "[WIP] Replay load/error events that happen earlier than commit",
    user: {
      login: "sebmarkbage",
      id: 63648,
      node_id: "MDQ6VXNlcjYzNjQ4",
      avatar_url: "https://avatars2.githubusercontent.com/u/63648?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/sebmarkbage",
      html_url: "https://github.com/sebmarkbage",
      followers_url: "https://api.github.com/users/sebmarkbage/followers",
      following_url: "https://api.github.com/users/sebmarkbage/following{/other_user}",
      gists_url: "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      starred_url: "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/sebmarkbage/subscriptions",
      organizations_url: "https://api.github.com/users/sebmarkbage/orgs",
      repos_url: "https://api.github.com/users/sebmarkbage/repos",
      events_url: "https://api.github.com/users/sebmarkbage/events{/privacy}",
      received_events_url: "https://api.github.com/users/sebmarkbage/received_events",
      type: "User",
      site_admin: false
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false
      }
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 5,
    created_at: "2018-10-16T18:32:13Z",
    updated_at: "2018-10-17T02:09:47Z",
    closed_at: null,
    author_association: "MEMBER",
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/13862",
      html_url: "https://github.com/facebook/react/pull/13862",
      diff_url: "https://github.com/facebook/react/pull/13862.diff",
      patch_url: "https://github.com/facebook/react/pull/13862.patch"
    },
    body: "If we create an img/image/link those might fire their load event before we commit. If that happens, we need to store the event so that we can replay it during the commit phase.\r\n\r\nI had an idea to fix it but this is still WIP because I actually need to test if this approach works.\r\n\r\n- [x] Write code\r\n- [ ] Write unit tests\r\n- [ ] Write fixtures\r\n"
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/13860",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13860/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13860/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13860/events",
    html_url: "https://github.com/facebook/react/pull/13860",
    id: 370693657,
    node_id: "MDExOlB1bGxSZXF1ZXN0MjIzMzE0MzIw",
    number: 13860,
    title: "Add warning about css shorthand properties collision(#6348)",
    user: {
      login: "YongPilMoon",
      id: 22088158,
      node_id: "MDQ6VXNlcjIyMDg4MTU4",
      avatar_url: "https://avatars1.githubusercontent.com/u/22088158?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/YongPilMoon",
      html_url: "https://github.com/YongPilMoon",
      followers_url: "https://api.github.com/users/YongPilMoon/followers",
      following_url: "https://api.github.com/users/YongPilMoon/following{/other_user}",
      gists_url: "https://api.github.com/users/YongPilMoon/gists{/gist_id}",
      starred_url: "https://api.github.com/users/YongPilMoon/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/YongPilMoon/subscriptions",
      organizations_url: "https://api.github.com/users/YongPilMoon/orgs",
      repos_url: "https://api.github.com/users/YongPilMoon/repos",
      events_url: "https://api.github.com/users/YongPilMoon/events{/privacy}",
      received_events_url: "https://api.github.com/users/YongPilMoon/received_events",
      type: "User",
      site_admin: false
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false
      }
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 1,
    created_at: "2018-10-16T16:23:04Z",
    updated_at: "2018-10-16T16:29:48Z",
    closed_at: null,
    author_association: "NONE",
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/13860",
      html_url: "https://github.com/facebook/react/pull/13860",
      diff_url: "https://github.com/facebook/react/pull/13860.diff",
      patch_url: "https://github.com/facebook/react/pull/13860.patch"
    },
    body: "I only added background shorthand properties.\r\nAfter code review, I would like to add rest of them.\r\n\r\n**Before submitting a pull request,** please make sure the following is done:\r\n\r\n1. Fork [the repository](https://github.com/facebook/react) and create your branch from `master`.\r\n2. Run `yarn` in the repository root.\r\n3. If you've fixed a bug or added code that should be tested, add tests!\r\n4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n5. Run `yarn test-prod` to test in the production environment. It supports the same options as `yarn test`.\r\n6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n9. Run the [Flow](https://flowtype.org/) typechecks (`yarn flow`).\r\n10. If you haven't already, complete the CLA.\r\n\r\n**Learn more about contributing:** https://reactjs.org/docs/how-to-contribute.html\r\n"
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/13859",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13859/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13859/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13859/events",
    html_url: "https://github.com/facebook/react/issues/13859",
    id: 370595436,
    node_id: "MDU6SXNzdWUzNzA1OTU0MzY=",
    number: 13859,
    title: "Bug inline styles flex value",
    user: {
      login: "OZZlE",
      id: 893783,
      node_id: "MDQ6VXNlcjg5Mzc4Mw==",
      avatar_url: "https://avatars0.githubusercontent.com/u/893783?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/OZZlE",
      html_url: "https://github.com/OZZlE",
      followers_url: "https://api.github.com/users/OZZlE/followers",
      following_url: "https://api.github.com/users/OZZlE/following{/other_user}",
      gists_url: "https://api.github.com/users/OZZlE/gists{/gist_id}",
      starred_url: "https://api.github.com/users/OZZlE/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/OZZlE/subscriptions",
      organizations_url: "https://api.github.com/users/OZZlE/orgs",
      repos_url: "https://api.github.com/users/OZZlE/repos",
      events_url: "https://api.github.com/users/OZZlE/events{/privacy}",
      received_events_url: "https://api.github.com/users/OZZlE/received_events",
      type: "User",
      site_admin: false
    },
    labels: [],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 4,
    created_at: "2018-10-16T12:49:01Z",
    updated_at: "2018-10-17T07:16:13Z",
    closed_at: null,
    author_association: "NONE",
    body: "**Steps to Reproduce:**\r\nhttps://jsfiddle.net/reactjs/69z2wepo/\r\n\r\n    class Hello extends React.Component {\r\n      render() {\r\n        return <div style={{ flex: '1 0 0' }}>Hello</div>;\r\n      }\r\n    }\r\n    ReactDOM.render(\r\n      <Hello />,\r\n      document.getElementById('container')\r\n    );\r\n\r\n**Expected Result:**\r\n`<div style=\"flex: 1 0 0;\">Hello</div>`\r\n\r\n**Actual Result:**\r\n`<div style=\"flex: 1 0 0px;\">Hello</div>`\r\n\r\nNotes:\r\nWhy change `0` to `0px` ?? I'm not sure IE11 works with `0` the same way as `0px`.. Also why not change the second digit then also? 0px and 0 is the same also, so the suffixing of px there is just a waste and can cause potential bugs. \r\n\r\nhttps://stackoverflow.com/a/22883146/846348"
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/13858",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13858/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13858/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13858/events",
    html_url: "https://github.com/facebook/react/issues/13858",
    id: 370529195,
    node_id: "MDU6SXNzdWUzNzA1MjkxOTU=",
    number: 13858,
    title: "[npm:create-react-class] Version up to date?",
    user: {
      login: "pjebs",
      id: 5377970,
      node_id: "MDQ6VXNlcjUzNzc5NzA=",
      avatar_url: "https://avatars1.githubusercontent.com/u/5377970?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/pjebs",
      html_url: "https://github.com/pjebs",
      followers_url: "https://api.github.com/users/pjebs/followers",
      following_url: "https://api.github.com/users/pjebs/following{/other_user}",
      gists_url: "https://api.github.com/users/pjebs/gists{/gist_id}",
      starred_url: "https://api.github.com/users/pjebs/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/pjebs/subscriptions",
      organizations_url: "https://api.github.com/users/pjebs/orgs",
      repos_url: "https://api.github.com/users/pjebs/repos",
      events_url: "https://api.github.com/users/pjebs/events{/privacy}",
      received_events_url: "https://api.github.com/users/pjebs/received_events",
      type: "User",
      site_admin: false
    },
    labels: [],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 0,
    created_at: "2018-10-16T09:50:10Z",
    updated_at: "2018-10-16T09:50:10Z",
    closed_at: null,
    author_association: "NONE",
    body: "The current version of react is v16.5.2.\r\n\r\nnpm states that `create-react-class`: https://www.npmjs.com/package/create-react-class\r\nis only on version 15.6.3.\r\n\r\nDoes that mean it doesn't support certain features that the latest version of react has?"
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/13857",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13857/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13857/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13857/events",
    html_url: "https://github.com/facebook/react/pull/13857",
    id: 370425700,
    node_id: "MDExOlB1bGxSZXF1ZXN0MjIzMTA0Nzgx",
    number: 13857,
    title: "[reconciler] ReactFiberNewContext import maxSigned31BitInt twice",
    user: {
      login: "yongningfu",
      id: 9846613,
      node_id: "MDQ6VXNlcjk4NDY2MTM=",
      avatar_url: "https://avatars2.githubusercontent.com/u/9846613?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/yongningfu",
      html_url: "https://github.com/yongningfu",
      followers_url: "https://api.github.com/users/yongningfu/followers",
      following_url: "https://api.github.com/users/yongningfu/following{/other_user}",
      gists_url: "https://api.github.com/users/yongningfu/gists{/gist_id}",
      starred_url: "https://api.github.com/users/yongningfu/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/yongningfu/subscriptions",
      organizations_url: "https://api.github.com/users/yongningfu/orgs",
      repos_url: "https://api.github.com/users/yongningfu/repos",
      events_url: "https://api.github.com/users/yongningfu/events{/privacy}",
      received_events_url: "https://api.github.com/users/yongningfu/received_events",
      type: "User",
      site_admin: false
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false
      }
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 1,
    created_at: "2018-10-16T03:33:34Z",
    updated_at: "2018-10-16T03:40:07Z",
    closed_at: null,
    author_association: "NONE",
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/13857",
      html_url: "https://github.com/facebook/react/pull/13857",
      diff_url: "https://github.com/facebook/react/pull/13857.diff",
      patch_url: "https://github.com/facebook/react/pull/13857.patch"
    },
    body: "in the ReactFiberNewContext, import maxSigned31BitInt twice"
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/13856",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13856/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13856/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13856/events",
    html_url: "https://github.com/facebook/react/issues/13856",
    id: 370404098,
    node_id: "MDU6SXNzdWUzNzA0MDQwOTg=",
    number: 13856,
    title: "shouldComponentUpdate() is ignored when Legacy Context and New Context are co-existing",
    user: {
      login: "stomita",
      id: 23387,
      node_id: "MDQ6VXNlcjIzMzg3",
      avatar_url: "https://avatars3.githubusercontent.com/u/23387?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/stomita",
      html_url: "https://github.com/stomita",
      followers_url: "https://api.github.com/users/stomita/followers",
      following_url: "https://api.github.com/users/stomita/following{/other_user}",
      gists_url: "https://api.github.com/users/stomita/gists{/gist_id}",
      starred_url: "https://api.github.com/users/stomita/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/stomita/subscriptions",
      organizations_url: "https://api.github.com/users/stomita/orgs",
      repos_url: "https://api.github.com/users/stomita/repos",
      events_url: "https://api.github.com/users/stomita/events{/privacy}",
      received_events_url: "https://api.github.com/users/stomita/received_events",
      type: "User",
      site_admin: false
    },
    labels: [],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 4,
    created_at: "2018-10-16T01:33:20Z",
    updated_at: "2018-10-17T03:02:18Z",
    closed_at: null,
    author_association: "NONE",
    body: "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nbug.\r\n\r\n**What is the current behavior?**\r\n\r\nIn a component tree where legacy context and new context are co-exisiting, when components are placed on tree nodes under the legacy context provider and between new context provider and consumer, components are always rendered even if `shouldComponentUpdate()` returns false in a parent component.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem.**\r\n\r\nhttps://jsfiddle.net/fdrgz9c4/15/\r\n\r\nThe above is the minimal case I've created without other dependencies, but first I found this behaviour in my Redux application, which uses legacy style context to map the state in store.\r\n\r\n**What is the expected behavior?**\r\n\r\nShould not call `render()` when `shouldComponentUpdate()` returns false in parent components, as same as the other cases (it prevents rendering when it is located without legacy context or not between new context provider / consumer tree. See the above fiddle)\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nReact 16.5.2, maybe in older versions.\r\nNo OS/browser dependencies I believe."
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/13855",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13855/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13855/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13855/events",
    html_url: "https://github.com/facebook/react/pull/13855",
    id: 370368168,
    node_id: "MDExOlB1bGxSZXF1ZXN0MjIzMDYyMTUz",
    number: 13855,
    title: "Add support for React.pure in ReactDOMServer",
    user: {
      login: "alexmckenley",
      id: 3639670,
      node_id: "MDQ6VXNlcjM2Mzk2NzA=",
      avatar_url: "https://avatars1.githubusercontent.com/u/3639670?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/alexmckenley",
      html_url: "https://github.com/alexmckenley",
      followers_url: "https://api.github.com/users/alexmckenley/followers",
      following_url: "https://api.github.com/users/alexmckenley/following{/other_user}",
      gists_url: "https://api.github.com/users/alexmckenley/gists{/gist_id}",
      starred_url: "https://api.github.com/users/alexmckenley/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/alexmckenley/subscriptions",
      organizations_url: "https://api.github.com/users/alexmckenley/orgs",
      repos_url: "https://api.github.com/users/alexmckenley/repos",
      events_url: "https://api.github.com/users/alexmckenley/events{/privacy}",
      received_events_url: "https://api.github.com/users/alexmckenley/received_events",
      type: "User",
      site_admin: false
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false
      }
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 4,
    created_at: "2018-10-15T22:27:39Z",
    updated_at: "2018-10-19T01:38:01Z",
    closed_at: null,
    author_association: "MEMBER",
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/13855",
      html_url: "https://github.com/facebook/react/pull/13855",
      diff_url: "https://github.com/facebook/react/pull/13855.diff",
      patch_url: "https://github.com/facebook/react/pull/13855.patch"
    },
    body: "Add support for REACT_PURE_TYPE in ReactDOMServer + tests"
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/13851",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13851/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13851/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13851/events",
    html_url: "https://github.com/facebook/react/issues/13851",
    id: 369957118,
    node_id: "MDU6SXNzdWUzNjk5NTcxMTg=",
    number: 13851,
    title: "findByType() from react-test-renderer should search the `props.children` components in addition to the pure `children` components",
    user: {
      login: "uladkasach",
      id: 10381896,
      node_id: "MDQ6VXNlcjEwMzgxODk2",
      avatar_url: "https://avatars1.githubusercontent.com/u/10381896?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/uladkasach",
      html_url: "https://github.com/uladkasach",
      followers_url: "https://api.github.com/users/uladkasach/followers",
      following_url: "https://api.github.com/users/uladkasach/following{/other_user}",
      gists_url: "https://api.github.com/users/uladkasach/gists{/gist_id}",
      starred_url: "https://api.github.com/users/uladkasach/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/uladkasach/subscriptions",
      organizations_url: "https://api.github.com/users/uladkasach/orgs",
      repos_url: "https://api.github.com/users/uladkasach/repos",
      events_url: "https://api.github.com/users/uladkasach/events{/privacy}",
      received_events_url: "https://api.github.com/users/uladkasach/received_events",
      type: "User",
      site_admin: false
    },
    labels: [],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 0,
    created_at: "2018-10-14T23:46:19Z",
    updated_at: "2018-10-14T23:48:59Z",
    closed_at: null,
    author_association: "NONE",
    body: "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nThis is a feature request. \r\n\r\n**What is the current behavior?**\r\nCurrently the `findByType()` method does not explore the `props.children` array that is passed to components. For some components, such as the `ScrollView` in `react-native`, this means that the method does not find all elements that are eventually rendered by type. \r\n\r\n**What is the expected behavior?**\r\nThe expected behavior is to have `findByType()` navigate through `props.children` of each element to see if any of the `children` are of the type being searched for. E.g., \r\n\r\ncomponents:\r\n```\r\n<ScrollView>\r\n    <View />\r\n    <View />\r\n</ScrollView>\r\n```\r\n\r\n`findAllByType(View).length` should return `2`, but currently returns `0` because the `children` of the above `ScrollView` component is empty: the `props.children` of that component has the components of interest.\r\n\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nThis is currently the case with \r\n```\r\n    \"react-test-renderer\": \"^16.5.2\"\r\n    \"react\": \"16.3.1\",\r\n```\r\n\r\n**Please let me know if I can clarify anything.** "
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/13847",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13847/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13847/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13847/events",
    html_url: "https://github.com/facebook/react/pull/13847",
    id: 369847701,
    node_id: "MDExOlB1bGxSZXF1ZXN0MjIyNjgwMTUx",
    number: 13847,
    title: "Add failing test for expiration",
    user: {
      login: "gaearon",
      id: 810438,
      node_id: "MDQ6VXNlcjgxMDQzOA==",
      avatar_url: "https://avatars0.githubusercontent.com/u/810438?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/gaearon",
      html_url: "https://github.com/gaearon",
      followers_url: "https://api.github.com/users/gaearon/followers",
      following_url: "https://api.github.com/users/gaearon/following{/other_user}",
      gists_url: "https://api.github.com/users/gaearon/gists{/gist_id}",
      starred_url: "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/gaearon/subscriptions",
      organizations_url: "https://api.github.com/users/gaearon/orgs",
      repos_url: "https://api.github.com/users/gaearon/repos",
      events_url: "https://api.github.com/users/gaearon/events{/privacy}",
      received_events_url: "https://api.github.com/users/gaearon/received_events",
      type: "User",
      site_admin: false
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false
      }
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 3,
    created_at: "2018-10-13T22:32:47Z",
    updated_at: "2018-10-14T13:58:33Z",
    closed_at: null,
    author_association: "MEMBER",
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/13847",
      html_url: "https://github.com/facebook/react/pull/13847",
      diff_url: "https://github.com/facebook/react/pull/13847.diff",
      patch_url: "https://github.com/facebook/react/pull/13847.patch"
    },
    body: "I don't know if this is a bug but this behavior seems weird.\r\n\r\nThe sequence is:\r\n\r\n* Perform update 1\r\n* Schedule update 2\r\n* Start rendering update 2\r\n* Advance time so that update 2 is expired\r\n* Schedule update 3\r\n* Flush expired work\r\n\r\nMy expectation is this should only flush update 2 (it's the one that expired). Update 3 hasn't expired yet.\r\n\r\nHowever, this flushes update 3 instead. If I revert https://github.com/facebook/react/pull/13503, this flushes both 2 and 3. I can't get it to only flush 2, but that seems like the desired behavior.\r\n\r\nBy itself flushing 3 isn't that bad. The real situation I was trying to reproduce is when we expire another update *while* rendering a just-expired update, and that kicks off another rendering cycle without yielding. But I couldn't get to reproducing that because even a more basic scenario above didn't work as I expected."
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/13846",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13846/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13846/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13846/events",
    html_url: "https://github.com/facebook/react/pull/13846",
    id: 369835505,
    node_id: "MDExOlB1bGxSZXF1ZXN0MjIyNjcxOTg4",
    number: 13846,
    title: "[#13560] Add warning for Factory Functions",
    user: {
      login: "lustoykov",
      id: 20355307,
      node_id: "MDQ6VXNlcjIwMzU1MzA3",
      avatar_url: "https://avatars2.githubusercontent.com/u/20355307?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/lustoykov",
      html_url: "https://github.com/lustoykov",
      followers_url: "https://api.github.com/users/lustoykov/followers",
      following_url: "https://api.github.com/users/lustoykov/following{/other_user}",
      gists_url: "https://api.github.com/users/lustoykov/gists{/gist_id}",
      starred_url: "https://api.github.com/users/lustoykov/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/lustoykov/subscriptions",
      organizations_url: "https://api.github.com/users/lustoykov/orgs",
      repos_url: "https://api.github.com/users/lustoykov/repos",
      events_url: "https://api.github.com/users/lustoykov/events{/privacy}",
      received_events_url: "https://api.github.com/users/lustoykov/received_events",
      type: "User",
      site_admin: false
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false
      }
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 1,
    created_at: "2018-10-13T19:54:02Z",
    updated_at: "2018-10-13T20:20:12Z",
    closed_at: null,
    author_association: "NONE",
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/13846",
      html_url: "https://github.com/facebook/react/pull/13846",
      diff_url: "https://github.com/facebook/react/pull/13846.diff",
      patch_url: "https://github.com/facebook/react/pull/13846.patch"
    },
    body: "Attempts to address #13560. Unfortunately, a lot of this has been best-guess work. I could continue if this goes in a somewhat correct direction.\r\n"
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/13845",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13845/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13845/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13845/events",
    html_url: "https://github.com/facebook/react/issues/13845",
    id: 369797261,
    node_id: "MDU6SXNzdWUzNjk3OTcyNjE=",
    number: 13845,
    title: "[npm:create-react-class] Forwarding refs",
    user: {
      login: "pjebs",
      id: 5377970,
      node_id: "MDQ6VXNlcjUzNzc5NzA=",
      avatar_url: "https://avatars1.githubusercontent.com/u/5377970?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/pjebs",
      html_url: "https://github.com/pjebs",
      followers_url: "https://api.github.com/users/pjebs/followers",
      following_url: "https://api.github.com/users/pjebs/following{/other_user}",
      gists_url: "https://api.github.com/users/pjebs/gists{/gist_id}",
      starred_url: "https://api.github.com/users/pjebs/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/pjebs/subscriptions",
      organizations_url: "https://api.github.com/users/pjebs/orgs",
      repos_url: "https://api.github.com/users/pjebs/repos",
      events_url: "https://api.github.com/users/pjebs/events{/privacy}",
      received_events_url: "https://api.github.com/users/pjebs/received_events",
      type: "User",
      site_admin: false
    },
    labels: [],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 5,
    created_at: "2018-10-13T12:21:02Z",
    updated_at: "2018-10-14T07:50:46Z",
    closed_at: null,
    author_association: "NONE",
    body: "https://reactjs.org/docs/react-without-es6.html doesn't seem to explain how to use forwarding refs:\r\n\r\nhttps://reactjs.org/docs/forwarding-refs.html\r\n\r\nDoes the render function in the class have to have the new props argument?"
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/13843",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13843/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13843/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13843/events",
    html_url: "https://github.com/facebook/react/pull/13843",
    id: 369732288,
    node_id: "MDExOlB1bGxSZXF1ZXN0MjIyNjAyODkw",
    number: 13843,
    title: "[minor bugfix] fix minor bug with handleReset in suspense fixture",
    user: {
      login: "sw-yx",
      id: 6764957,
      node_id: "MDQ6VXNlcjY3NjQ5NTc=",
      avatar_url: "https://avatars1.githubusercontent.com/u/6764957?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/sw-yx",
      html_url: "https://github.com/sw-yx",
      followers_url: "https://api.github.com/users/sw-yx/followers",
      following_url: "https://api.github.com/users/sw-yx/following{/other_user}",
      gists_url: "https://api.github.com/users/sw-yx/gists{/gist_id}",
      starred_url: "https://api.github.com/users/sw-yx/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/sw-yx/subscriptions",
      organizations_url: "https://api.github.com/users/sw-yx/orgs",
      repos_url: "https://api.github.com/users/sw-yx/repos",
      events_url: "https://api.github.com/users/sw-yx/events{/privacy}",
      received_events_url: "https://api.github.com/users/sw-yx/received_events",
      type: "User",
      site_admin: false
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false
      }
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 5,
    created_at: "2018-10-12T22:37:23Z",
    updated_at: "2018-10-16T19:38:10Z",
    closed_at: null,
    author_association: "CONTRIBUTOR",
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/13843",
      html_url: "https://github.com/facebook/react/pull/13843",
      diff_url: "https://github.com/facebook/react/pull/13843.diff",
      patch_url: "https://github.com/facebook/react/pull/13843.patch"
    },
    body: "otherwise resetting the cache in debugger throws an error \r\n\r\nreported here\r\nhttps://www.reddit.com/r/reactjs/comments/9n9nfo/react_166_canary/\r\n\r\n**Before submitting a pull request,** please make sure the following is done:\r\n\r\n1. Fork [the repository](https://github.com/facebook/react) and create your branch from `master`.\r\n2. Run `yarn` in the repository root.\r\n3. If you've fixed a bug or added code that should be tested, add tests!\r\n4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n5. Run `yarn test-prod` to test in the production environment. It supports the same options as `yarn test`.\r\n6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n9. Run the [Flow](https://flowtype.org/) typechecks (`yarn flow`).\r\n10. If you haven't already, complete the CLA.\r\n\r\n**Learn more about contributing:** https://reactjs.org/docs/how-to-contribute.html\r\n"
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/13840",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13840/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13840/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13840/events",
    html_url: "https://github.com/facebook/react/issues/13840",
    id: 369569685,
    node_id: "MDU6SXNzdWUzNjk1Njk2ODU=",
    number: 13840,
    title: "'Set' is undefined in Version 16.5.2 using recommended polyfills",
    user: {
      login: "hohenp",
      id: 29328026,
      node_id: "MDQ6VXNlcjI5MzI4MDI2",
      avatar_url: "https://avatars1.githubusercontent.com/u/29328026?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/hohenp",
      html_url: "https://github.com/hohenp",
      followers_url: "https://api.github.com/users/hohenp/followers",
      following_url: "https://api.github.com/users/hohenp/following{/other_user}",
      gists_url: "https://api.github.com/users/hohenp/gists{/gist_id}",
      starred_url: "https://api.github.com/users/hohenp/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/hohenp/subscriptions",
      organizations_url: "https://api.github.com/users/hohenp/orgs",
      repos_url: "https://api.github.com/users/hohenp/repos",
      events_url: "https://api.github.com/users/hohenp/events{/privacy}",
      received_events_url: "https://api.github.com/users/hohenp/received_events",
      type: "User",
      site_admin: false
    },
    labels: [
      {
        id: 620368407,
        node_id: "MDU6TGFiZWw2MjAzNjg0MDc=",
        url: "https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information",
        name: "Resolution: Needs More Information",
        color: "fffde7",
        default: false
      }
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 2,
    created_at: "2018-10-12T14:13:19Z",
    updated_at: "2018-10-12T14:29:38Z",
    closed_at: null,
    author_association: "NONE",
    body: "Hi, I have updated to React 16.5.2 and have different error logs in console:\r\n![image](https://user-images.githubusercontent.com/29328026/46874218-ea592000-ce38-11e8-874e-6170ba81d3b7.png)\r\n\r\nI am using IE11 in IE10 Document mode,\r\nI have checked the article: https://reactjs.org/docs/javascript-environment-requirements.html \r\n\r\nMy entry Point:\r\n![image](https://user-images.githubusercontent.com/29328026/46874281-183e6480-ce39-11e8-902e-64ceb5e3ead1.png)\r\n\r\nI am including the scripts in the following order:\r\n<script src=\"https://unpkg.com/react@16/umd/react.development.js\" crossorigin></script>\r\n<script src=\"https://unpkg.com/react-dom@16/umd/react-dom.development.js\" crossorigin></script>\r\n<!-- Kanban -->\r\n<script src=\"/src/kanban.min.js\"></script>\r\n\r\nI had the solution running in Version 15.6.6 without These Errors and had included the same polyfills there. The Problem is only in IE11 with Document Mode 10. In Chrome everything runs fine.\r\n\r\nThanks for your help,\r\nPascal\r\n\r\n"
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/13838",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13838/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13838/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13838/events",
    html_url: "https://github.com/facebook/react/issues/13838",
    id: 369521758,
    node_id: "MDU6SXNzdWUzNjk1MjE3NTg=",
    number: 13838,
    title: "head > meta > content escaping issue",
    user: {
      login: "oliviertassinari",
      id: 3165635,
      node_id: "MDQ6VXNlcjMxNjU2MzU=",
      avatar_url: "https://avatars2.githubusercontent.com/u/3165635?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/oliviertassinari",
      html_url: "https://github.com/oliviertassinari",
      followers_url: "https://api.github.com/users/oliviertassinari/followers",
      following_url: "https://api.github.com/users/oliviertassinari/following{/other_user}",
      gists_url: "https://api.github.com/users/oliviertassinari/gists{/gist_id}",
      starred_url: "https://api.github.com/users/oliviertassinari/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/oliviertassinari/subscriptions",
      organizations_url: "https://api.github.com/users/oliviertassinari/orgs",
      repos_url: "https://api.github.com/users/oliviertassinari/repos",
      events_url: "https://api.github.com/users/oliviertassinari/events{/privacy}",
      received_events_url: "https://api.github.com/users/oliviertassinari/received_events",
      type: "User",
      site_admin: false
    },
    labels: [],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 0,
    created_at: "2018-10-12T12:01:36Z",
    updated_at: "2018-10-12T12:15:54Z",
    closed_at: null,
    author_association: "CONTRIBUTOR",
    body: "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nI'm guessing it's a bug.\r\n\r\n**What is the current behavior?**\r\n\r\nThe following source code,\r\n\r\n```jsx\r\n<meta property=\"og:image\" content=\"https://onepixel.imgix.net/60366a63-1ac8-9626-1df8-9d8d5e5e2601_1000.jpg?auto=format&q=80&mark=watermark%2Fcenter-v5.png&markalign=center%2Cmiddle&h=500&w=500&s=60ec785603e5f71fe944f76b4dacef08\" />\r\n```\r\n\r\n, is being escaped once server side rendered:\r\n```jsx\r\n<meta property=\"og:image\" content=\"https://onepixel.imgix.net/60366a63-1ac8-9626-1df8-9d8d5e5e2601_1000.jpg?auto=format&amp;q=80&amp;mark=watermark%2Fcenter-v5.png&amp;markalign=center%2Cmiddle&amp;h=500&amp;w=500&amp;s=60ec785603e5f71fe944f76b4dacef08\"/>\r\n```\r\n\r\nYou can reproduce the behavior like this:\r\n```jsx\r\nconst React = require(\"react\");\r\nconst ReactDOMServer = require(\"react-dom/server\");\r\nconst http = require(\"http\");\r\n\r\nconst doc = React.createElement(\"html\", {\r\n  children: [\r\n    React.createElement(\"head\", {\r\n      children: React.createElement(\"meta\", {\r\n        property: \"og:image\",\r\n        content:\r\n          \"https://onepixel.imgix.net/60366a63-1ac8-9626-1df8-9d8d5e5e2601_1000.jpg?auto=format&q=80&mark=watermark%2Fcenter-v5.png&markalign=center%2Cmiddle&h=500&w=500&s=60ec785603e5f71fe944f76b4dacef08\"\r\n      })\r\n    }),\r\n    React.createElement(\"body\", { children: \"og:image\" })\r\n  ]\r\n});\r\n\r\n//create a server object:\r\nhttp\r\n  .createServer(function(req, res) {\r\n    res.write(\"<!DOCTYPE html>\" + ReactDOMServer.renderToStaticMarkup(doc)); //write a response to the client\r\n    res.end(); //end the response\r\n  })\r\n  .listen(8080); //the server object listens on port 8080\r\n```\r\neditor: https://codesandbox.io/s/my299jk7qp\r\noutput : https://my299jk7qp.sse.codesandbox.io/\r\n\r\n**What is the expected behavior?**\r\n\r\nI would expect the content not being escaped. It's related to https://github.com/zeit/next.js/issues/2006#issuecomment-355917446.\r\nI'm using the `og:image` meta element so my pages can have nice previews within Facebook :).\r\n\r\n![capture d ecran 2018-10-12 a 14 15 26](https://user-images.githubusercontent.com/3165635/46868650-52076f00-ce29-11e8-892f-cfbf924bba82.png)\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n16.5.2"
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/13837",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13837/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13837/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13837/events",
    html_url: "https://github.com/facebook/react/issues/13837",
    id: 369499649,
    node_id: "MDU6SXNzdWUzNjk0OTk2NDk=",
    number: 13837,
    title: "Forward ref bug with latest React version",
    user: {
      login: "sebastiankemp",
      id: 44088303,
      node_id: "MDQ6VXNlcjQ0MDg4MzAz",
      avatar_url: "https://avatars1.githubusercontent.com/u/44088303?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/sebastiankemp",
      html_url: "https://github.com/sebastiankemp",
      followers_url: "https://api.github.com/users/sebastiankemp/followers",
      following_url: "https://api.github.com/users/sebastiankemp/following{/other_user}",
      gists_url: "https://api.github.com/users/sebastiankemp/gists{/gist_id}",
      starred_url: "https://api.github.com/users/sebastiankemp/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/sebastiankemp/subscriptions",
      organizations_url: "https://api.github.com/users/sebastiankemp/orgs",
      repos_url: "https://api.github.com/users/sebastiankemp/repos",
      events_url: "https://api.github.com/users/sebastiankemp/events{/privacy}",
      received_events_url: "https://api.github.com/users/sebastiankemp/received_events",
      type: "User",
      site_admin: false
    },
    labels: [
      {
        id: 620368407,
        node_id: "MDU6TGFiZWw2MjAzNjg0MDc=",
        url: "https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information",
        name: "Resolution: Needs More Information",
        color: "fffde7",
        default: false
      }
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 10,
    created_at: "2018-10-12T10:49:12Z",
    updated_at: "2018-10-19T01:09:59Z",
    closed_at: null,
    author_association: "NONE",
    body: "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nBug\r\n\r\n**What is the current behavior?**\r\n\r\nWhen a error boundary components catches error and we do a setState, the refs in forwardRef break. I have attached an image where this error occurs at the bottom of this post to assist.\r\n\r\nI struggled to find the root of the problem and we have an internal task open to try and fix the code if possible and make a PR for React. I could not find the same code as what shows in screenshot. I am probably not understanding the code right.\r\n\r\n**What is the expected behavior?**\r\n\r\nForwardRef should work with our components like expected.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nAfter checking our package.json, it seems we are using a alpha version of React. The people on my team updated to this version of React last week due to a bug fix that it has. I'm not sure how stable this version is but there seems to be an issue with forwardRef API. It does not happen on the previous version. Maybe this bug has been fixed in the next version?\r\n\r\nI already report this bug on React discord channel and someone told me to open issue here. Thank you for your help.\r\n\r\nhttps://github.com/facebook/react/blob/6d5d250bef88115ceceb906d0cab1d60ea996d7b/packages/react-reconciler/src/ReactFiberBeginWork.js#L212"
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/13835",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13835/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13835/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13835/events",
    html_url: "https://github.com/facebook/react/issues/13835",
    id: 369410493,
    node_id: "MDU6SXNzdWUzNjk0MTA0OTM=",
    number: 13835,
    title: "`onChange` warning creates false positives",
    user: {
      login: "selbekk",
      id: 1307267,
      node_id: "MDQ6VXNlcjEzMDcyNjc=",
      avatar_url: "https://avatars1.githubusercontent.com/u/1307267?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/selbekk",
      html_url: "https://github.com/selbekk",
      followers_url: "https://api.github.com/users/selbekk/followers",
      following_url: "https://api.github.com/users/selbekk/following{/other_user}",
      gists_url: "https://api.github.com/users/selbekk/gists{/gist_id}",
      starred_url: "https://api.github.com/users/selbekk/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/selbekk/subscriptions",
      organizations_url: "https://api.github.com/users/selbekk/orgs",
      repos_url: "https://api.github.com/users/selbekk/repos",
      events_url: "https://api.github.com/users/selbekk/events{/privacy}",
      received_events_url: "https://api.github.com/users/selbekk/received_events",
      type: "User",
      site_admin: false
    },
    labels: [],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 1,
    created_at: "2018-10-12T06:01:10Z",
    updated_at: "2018-10-18T13:04:57Z",
    closed_at: null,
    author_association: "CONTRIBUTOR",
    body: "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nBug\r\n\r\n**What is the current behavior?**\r\nWhen you set the `value` of an `input` field, you get a warning while development:\r\n\r\n> Warning: Failed prop type: You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.\r\n\r\nHowever, this is not always true. If your `onChange`-listener is further up the component tree, the warning is no longer true.\r\n\r\nThe same goes for checkboxes.\r\n\r\nHere's a reproduction: https://codesandbox.io/s/6wjl48mjn (open the console tab to see the warning)\r\n\r\nHere's the relevant piece of React source code: https://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react-dom/src/shared/ReactControlledValuePropTypes.js#L41-L46\r\n\r\n**What is the expected behavior?**\r\n\r\nIf possible, I'd love React to not show this warning if this is the issue. Or at the very least change the wording. The warning is great when you've actually forgotten to add an onChange handler, so we probably shouldn't remove it all together.\r\n\r\nRight now I'm passing a no-op onChange listener to silence the warning (yeah it's dev only, but I'm dev-ing all the time, and warnings are annoying), which probably isn't a great solution either.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nAll versions I've ever tried the last three years\r\n\r\n----\r\n\r\nI'd love to work on this, but I'm not sure how to solve it."
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/13832",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13832/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13832/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13832/events",
    html_url: "https://github.com/facebook/react/pull/13832",
    id: 369335880,
    node_id: "MDExOlB1bGxSZXF1ZXN0MjIyMzAyNjYy",
    number: 13832,
    title: "Add failing test for Suspense bug",
    user: {
      login: "gaearon",
      id: 810438,
      node_id: "MDQ6VXNlcjgxMDQzOA==",
      avatar_url: "https://avatars0.githubusercontent.com/u/810438?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/gaearon",
      html_url: "https://github.com/gaearon",
      followers_url: "https://api.github.com/users/gaearon/followers",
      following_url: "https://api.github.com/users/gaearon/following{/other_user}",
      gists_url: "https://api.github.com/users/gaearon/gists{/gist_id}",
      starred_url: "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/gaearon/subscriptions",
      organizations_url: "https://api.github.com/users/gaearon/orgs",
      repos_url: "https://api.github.com/users/gaearon/repos",
      events_url: "https://api.github.com/users/gaearon/events{/privacy}",
      received_events_url: "https://api.github.com/users/gaearon/received_events",
      type: "User",
      site_admin: false
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false
      }
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 4,
    created_at: "2018-10-11T22:51:30Z",
    updated_at: "2018-10-11T23:37:17Z",
    closed_at: null,
    author_association: "MEMBER",
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/13832",
      html_url: "https://github.com/facebook/react/pull/13832",
      diff_url: "https://github.com/facebook/react/pull/13832.diff",
      patch_url: "https://github.com/facebook/react/pull/13832.patch"
    },
    body: "I expect that `maxDuration` that is larger than both the actual waiting time *and* the current expiration context timeout should be equivalent to not specifying `maxDuration` at all. But that doesn't seem like what happens. \r\n\r\nA more concrete example:\r\n\r\n```js\r\nimport React, { lazy, unstable_Suspense as Suspense } from \"react\";\r\nimport { unstable_createRoot as createRoot } from \"react-dom\";\r\n\r\nlet done = false;\r\nlet promise;\r\nfunction Delay({ ms, children }) {\r\n  if (done) {\r\n    return children;\r\n  }\r\n  if (!promise) {\r\n    promise = new Promise(resolve => {\r\n      setTimeout(() => {\r\n        done = true;\r\n        resolve();\r\n      }, ms);\r\n    });\r\n  }\r\n  throw promise;\r\n}\r\n\r\nclass Spinner extends React.Component {\r\n  componentDidMount() {\r\n    alert(\"spin\");\r\n  }\r\n  render() {\r\n    console.log(\"spinner\");\r\n    return <h1>🌀 'Loading....'</h1>;\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1 onClick={() => this.setState({ showStuff: true })}>Suspense</h1>\r\n        {this.state.showStuff && (\r\n          <Suspense maxDuration={2000} fallback={<Spinner />}>\r\n            <Delay ms={10}>Ready</Delay>\r\n          </Suspense>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\ncreateRoot(document.getElementById(\"root\")).render(<App />);\r\n```\r\n\r\nI'd expect `Spinner` to never be shown — or at least the behavior to be consistent between `maxDuration={2000}` and missing `maxDuration`."
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/13828",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13828/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13828/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13828/events",
    html_url: "https://github.com/facebook/react/issues/13828",
    id: 369115492,
    node_id: "MDU6SXNzdWUzNjkxMTU0OTI=",
    number: 13828,
    title: "Support for classList",
    user: {
      login: "GasimGasimzada",
      id: 807231,
      node_id: "MDQ6VXNlcjgwNzIzMQ==",
      avatar_url: "https://avatars1.githubusercontent.com/u/807231?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/GasimGasimzada",
      html_url: "https://github.com/GasimGasimzada",
      followers_url: "https://api.github.com/users/GasimGasimzada/followers",
      following_url: "https://api.github.com/users/GasimGasimzada/following{/other_user}",
      gists_url: "https://api.github.com/users/GasimGasimzada/gists{/gist_id}",
      starred_url: "https://api.github.com/users/GasimGasimzada/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/GasimGasimzada/subscriptions",
      organizations_url: "https://api.github.com/users/GasimGasimzada/orgs",
      repos_url: "https://api.github.com/users/GasimGasimzada/repos",
      events_url: "https://api.github.com/users/GasimGasimzada/events{/privacy}",
      received_events_url: "https://api.github.com/users/GasimGasimzada/received_events",
      type: "User",
      site_admin: false
    },
    labels: [],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 5,
    created_at: "2018-10-11T13:14:18Z",
    updated_at: "2018-10-17T09:24:49Z",
    closed_at: null,
    author_association: "NONE",
    body: "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nfeature\r\n\r\n**What is the current behavior?**\r\n\r\nOnly `className` exists right now.\r\n\r\n**What is the expected behavior?**\r\n\r\nI think adding `classList` property for DOM elements would be useful. As far as I understand React Fire will drop support for IE11 but even in IE11, you can add or remove classList from elements.\r\n\r\nAnother idea might be adding support for for array type for `className` (or future `class`, which will make more sense because array). If array is passed, `classList` will be used for DOM elements. Otherwise, `className` is used as usual in the real DOM side.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nAll versions. I hope this is added in React Fire."
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/13820",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url: "https://api.github.com/repos/facebook/react/issues/13820/labels{/name}",
    comments_url: "https://api.github.com/repos/facebook/react/issues/13820/comments",
    events_url: "https://api.github.com/repos/facebook/react/issues/13820/events",
    html_url: "https://github.com/facebook/react/issues/13820",
    id: 368806183,
    node_id: "MDU6SXNzdWUzNjg4MDYxODM=",
    number: 13820,
    title: "componentDidCatch - a void element",
    user: {
      login: "mlityn",
      id: 40218354,
      node_id: "MDQ6VXNlcjQwMjE4MzU0",
      avatar_url: "https://avatars2.githubusercontent.com/u/40218354?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/mlityn",
      html_url: "https://github.com/mlityn",
      followers_url: "https://api.github.com/users/mlityn/followers",
      following_url: "https://api.github.com/users/mlityn/following{/other_user}",
      gists_url: "https://api.github.com/users/mlityn/gists{/gist_id}",
      starred_url: "https://api.github.com/users/mlityn/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/mlityn/subscriptions",
      organizations_url: "https://api.github.com/users/mlityn/orgs",
      repos_url: "https://api.github.com/users/mlityn/repos",
      events_url: "https://api.github.com/users/mlityn/events{/privacy}",
      received_events_url: "https://api.github.com/users/mlityn/received_events",
      type: "User",
      site_admin: false
    },
    labels: [
      {
        id: 40929151,
        node_id: "MDU6TGFiZWw0MDkyOTE1MQ==",
        url: "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
        name: "Type: Bug",
        color: "b60205",
        default: false
      }
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 4,
    created_at: "2018-10-10T18:58:40Z",
    updated_at: "2018-10-18T23:49:59Z",
    closed_at: null,
    author_association: "NONE",
    body: "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nA bug.\r\n\r\n**What is the current behavior?**\r\n\r\ncomponentDidCatch isn't called when a child component renders a void element containing another element. The app just crashes.\r\nIf it contains just text, the same error (\"...is a void element tag and must neither have children nor use dangerouslySetInnerHTML\") appears, but this time with componentDidCatch properly called.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nhttps://codesandbox.io/s/0042z5wrlp\r\nThe behavior is different when you change Comp1 with Comp2.\r\n\r\n**What is the expected behavior?**\r\n\r\ncomponentDidCatch should be called in both cases.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\n16.5.2. \r\nIn 16.4.2 it worked correctly."
  }
];